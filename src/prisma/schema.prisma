// *** GENERATED BY PRISMIX :: DO NOT EDIT ***
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String        @unique @default(uuid())
  username    String        @unique
  password    String
  role        Role
  profile     Profile?      @relation(name: "ProfileToUser")
  timeRecord  TimeRecord[]  @relation(name: "TimeRecordToUser")
  transaction Transaction[] @relation(name: "TransactionToUser")
  createdAt   DateTime      @default(now())
  updatedAt   DateTime?     @updatedAt
}

model Profile {
  id             String         @unique @default(uuid())
  userId         String         @unique
  lastName       String
  firstName      String
  middleName     String?
  suffix         String?
  gender         String?
  birthDate      DateTime?
  contactNumber  String?
  contactEmail   String?
  employmentType employmentType
  department     department
  hireDate       DateTime
  supervisor     String?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime?      @updatedAt
  user           User           @relation(name: "ProfileToUser", fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Transaction {
  id              String          @unique @default(uuid())
  userId          String
  user            User            @relation(name: "TransactionToUser", fields: [userId], references: [id], onDelete: Cascade)
  transactionType transactionType
  description     String?
  status          status          @default(Pending)
  startDate       DateTime?
  endDate         DateTime?
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
}

model TimeRecord {
  id          String    @unique @default(uuid())
  userId      String
  user        User      @relation(name: "TimeRecordToUser", fields: [userId], references: [id], onDelete: Cascade)
  recordDate  String?
  timeIn      DateTime?
  timeOut     DateTime?
  hoursWorked Int?
}

enum Role {
  ADMIN
  EMPLOYEE
  INTERN
  PENDING
}

enum employmentType {
  FULLTIME
  PARTTIME
  INTERN
}

enum department {
  ADMINFINANCE
  PRODUCTION
  MARKETING
  SOCIALMEDIA
  DEVOPS
  MOBILEDEV
  WEBDEV
  HR
}

enum status {
  Pending
  Cancelled
  Declined
  Approved
}

enum transactionType {
  LEAVE
  UNDERTIME
  OFFICIALBUSINESS
  OVERTIME
  SCHEDULE
  CERTOFATTENDANCE
}
